from PyQt6.QtWidgets import (QWidget, QVBoxLayout, QHBoxLayout, 
                           QPushButton, QLabel, QSlider)
from PyQt6.QtCore import Qt, pyqtSignal
from PyQt6.QtMultimedia import QMediaPlayer, QAudioOutput

class PlayerWidget(QWidget):
    # –°–∏–≥–Ω–∞–ª—ã
    playback_ended = pyqtSignal()
    
    def __init__(self):
        super().__init__()
        self.setup_player()
        self.setup_ui()
        self.connect_signals()

    def setup_player(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–¥–∏–∞–ø–ª–µ–µ—Ä–∞"""
        self.player = QMediaPlayer()
        self.audio_output = QAudioOutput()
        self.player.setAudioOutput(self.audio_output)
        self.audio_output.setVolume(0.5)  # 50% –≥—Ä–æ–º–∫–æ—Å—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        layout = QVBoxLayout(self)
        layout.setSpacing(20)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–∫–µ
        self.track_info = QLabel("–ù–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è")
        self.track_info.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.track_info.setObjectName("track-title")
        layout.addWidget(self.track_info)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
        progress_layout = QHBoxLayout()
        
        self.time_current = QLabel("0:00")
        self.time_current.setObjectName("time-label")
        
        self.progress_slider = QSlider(Qt.Orientation.Horizontal)
        self.progress_slider.setEnabled(False)
        
        self.time_total = QLabel("0:00")
        self.time_total.setObjectName("time-label")
        
        progress_layout.addWidget(self.time_current)
        progress_layout.addWidget(self.progress_slider, 1)
        progress_layout.addWidget(self.time_total)
        layout.addLayout(progress_layout)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        controls_layout = QHBoxLayout()
        controls_layout.setAlignment(Qt.AlignmentFlag.AlignCenter)
        
        self.prev_button = QPushButton("‚èÆ")
        self.play_button = QPushButton("‚èµ")
        self.next_button = QPushButton("‚è≠")
        
        for button in [self.prev_button, self.play_button, self.next_button]:
            button.setObjectName("player-control")
            controls_layout.addWidget(button)
            
        layout.addLayout(controls_layout)

        # –ì—Ä–æ–º–∫–æ—Å—Ç—å
        volume_layout = QHBoxLayout()
        
        volume_icon = QLabel("üîä")
        self.volume_slider = QSlider(Qt.Orientation.Horizontal)
        self.volume_slider.setMaximumWidth(100)
        self.volume_slider.setValue(50)
        
        volume_layout.addWidget(volume_icon)
        volume_layout.addWidget(self.volume_slider)
        volume_layout.addStretch()
        layout.addLayout(volume_layout)

    def connect_signals(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤"""
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.play_button.clicked.connect(self.play_pause)
        self.volume_slider.valueChanged.connect(
            lambda x: self.audio_output.setVolume(x / 100))
        
        # –°–æ–±—ã—Ç–∏—è –ø–ª–µ–µ—Ä–∞
        self.player.positionChanged.connect(self.update_position)
        self.player.durationChanged.connect(self.update_duration)
        self.player.playbackStateChanged.connect(self.update_play_button)
        self.progress_slider.sliderMoved.connect(self.seek_position)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç—Ä–µ–∫–∞
        self.player.mediaStatusChanged.connect(self.handle_media_status)

    def load_track(self, path):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–µ–∫–∞"""
        self.player.setSource(path)
        self.track_info.setText(self.get_filename_from_path(path))
        self.progress_slider.setEnabled(True)
        self.play()

    def play(self):
        """–ù–∞—á–∞—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ"""
        self.player.play()

    def pause(self):
        """–ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø–∞—É–∑—É"""
        self.player.pause()

    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ"""
        self.player.stop()
        self.progress_slider.setEnabled(False)
        self.track_info.setText("–ù–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è")
        self.time_current.setText("0:00")
        self.time_total.setText("0:00")

    def play_pause(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ/–ø–∞—É–∑–∞"""
        if self.player.playbackState() == QMediaPlayer.PlaybackState.PlayingState:
            self.pause()
        else:
            self.play()

    def seek_position(self, position):
        """–ü–µ—Ä–µ–º–æ—Ç–∫–∞"""
        self.player.setPosition(position)

    def update_position(self, position):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏"""
        self.progress_slider.setValue(position)
        self.time_current.setText(self.format_time(position))

    def update_duration(self, duration):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        self.progress_slider.setRange(0, duration)
        self.time_total.setText(self.format_time(duration))

    def update_play_button(self, state):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –∫–Ω–æ–ø–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è"""
        if state == QMediaPlayer.PlaybackState.PlayingState:
            self.play_button.setText("‚è∏")
        else:
            self.play_button.setText("‚èµ")

    def handle_media_status(self, status):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –º–µ–¥–∏–∞"""
        if status == QMediaPlayer.MediaStatus.EndOfMedia:
            self.playback_ended.emit()

    def set_volume(self, volume):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏"""
        self.volume_slider.setValue(int(volume * 100))
        self.audio_output.setVolume(volume)

    def get_position(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏"""
        return self.player.position()

    def get_duration(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ç—Ä–µ–∫–∞"""
        return self.player.duration()

    def is_playing(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è"""
        return self.player.playbackState() == QMediaPlayer.PlaybackState.PlayingState

    @staticmethod
    def format_time(ms):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏"""
        s = ms // 1000
        m, s = divmod(s, 60)
        h, m = divmod(m, 60)
        if h > 0:
            return f"{h}:{m:02d}:{s:02d}"
        return f"{m}:{s:02d}"

    @staticmethod
    def get_filename_from_path(path):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –∏–∑ –ø—É—Ç–∏"""
        return path.rsplit('/', 1)[-1] if '/' in path else path